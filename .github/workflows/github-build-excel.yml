name: Build Excel (Linux)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test-excel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK 9.0.x
        uses: actions/setup-dotnet@v4
        with:
        dotnet-version: '9.0.x'
        cache: true
            cache-dependency-path: |
              **/*.csproj
              **/packages.lock.json

      - name: Dotnet info
        run: |
          dotnet --info
          dotnet --list-sdks
          dotnet --list-runtimes

      - name: Restore
        run: dotnet restore OfficeDocuments.sln

      - name: Build Excel project
        run: dotnet build src/OfficeDocuments.Excel/OfficeDocuments.Excel.csproj --configuration Release --no-restore

      - name: Test Excel project
        run: |
          dotnet test test/OfficeDocuments.Excel.Tests/OfficeDocuments.Excel.Tests.csproj \
            --configuration Release \
            --no-build \
            --logger "trx;LogFileName=test-results.trx" \
            --collect "XPlat Code Coverage"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: excel-test-results
          path: test/OfficeDocuments.Excel.Tests/TestResults/**/*.trx
          if-no-files-found: warn

      - name: Upload coverage (Cobertura)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: excel-coverage-cobertura
          path: test/OfficeDocuments.Excel.Tests/TestResults/**/coverage.cobertura.xml
          if-no-files-found: warn

      - name: Coverage Summary
        if: always()
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: test/OfficeDocuments.Excel.Tests/TestResults/**/coverage.cobertura.xml
          badge: true
          format: markdown
          output: both
